# This workflow uploads the code coverage results for the project to Codecov on a daily basis.
name: Daily build

on:
  schedule:
    - cron: '30 18 * * *'  # 00:00 in LK time (GMT+5:30)
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Latest Ballerina Version
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: latest

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17.0.7

      - name: Find Gradle Projects
        run: |
        
          gradle_folders=$(find . -name "gradlew" -printf '%d\n' | sort -u)
          echo "$gradle_folders"

          if [[ ${#gradle_folders[@]} -eq 0 ]]; then
            echo "No Gradle projects found!"
            exit 1
          fi

          echo "Gradle projects found in:"
          for folder in "${gradle_folders[@]}"; do
            echo "  - $folder"  # Using single space for better formatting
          done

      - name: Build and Test Ballerina Projects (Excluding Gradle Projects)
        run: |
          # Define list of folders to skip building using Ballerina Build
          SKIP_FOLDERS=( "core/ballerina" "dicomservice/ballerina" )

          # Find Ballerina Project Folders and remove leading ./
          BALLERINA_PROJECT_FOLDERS=$(find . -name "Ballerina.toml" -printf '%p\n' | sed 's/\/Ballerina.toml$//' | sed 's,^./,,' | sort -u | tr '\n' ' ')

          # Convert BALLERINA_PROJECT_FOLDERS to an array
          read -r -a BALLERINA_PROJECTS <<<"${BALLERINA_PROJECT_FOLDERS}"

          echo "Building and testing the following Ballerina projects:"
          for folder in "${BALLERINA_PROJECTS[@]}"; do
            if [[ ! "${SKIP_FOLDERS[@]}" =~ "$folder" ]]; then
              echo "$folder"  # Print the included folder for reference
              cd "$folder"  # Set working directory for each iteration
              bal build
              bal test --test-report --code-coverage --coverage-format=xml
              cd ..        # Move back to the original directory
            fi
          done

      - name: Upload Coverage Reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true  # Optional: Specify if the CI build should fail when Codecov fails.
